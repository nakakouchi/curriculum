■ 開発
ウォーターフォール開発:上流工程から下流工程へ順次移行していく開発手法。要求定義、外部設計（概要設計）、内部設計（詳細設計）、開発（プログラミング）、テスト、運用の各工程を順番に完了していく。
アジャイル開発：（agile：素早い）イテレーションと呼ばれる1〜4週間程度の期間内で一つの機能を開発・リリースしていく。
マイグレーション：（migration：移動）既存のシステムやソフトウェアなどを新しいプラットフォームやシステムに移行すること。
デグレーション：（degrade：デグレード）のこと。以前より悪くなること。
デプロイ：アプリケーションをサーバー上で利用できるようにするための一連の作業のこと。
コンフリクト：（conflict：衝突、不一致）コンピュータで複数の作業が同じメモリ少息を利用して競合する状態のこと。
○環境
開発環境（ローカル）：ソフトウェアを廃発するためために利用する環境のこと。
検証環境（ステージング）：開発環境で作られたシステムをテストをするための工程。
本番環境：ユーザーが実際にシステムを使う環境のこと。
○設計書／仕様書
要件定義：どうシステム化するのかを決めること。
基本設計書：ソフトウェアの動きを外から見た際にどういう動きをするのかを決めたもの。（what）
詳細設計書：基本設計で決められた動きをどうやって実現させるか決めたもの。（how）
○テスト
単体テスト（UT）：開発したシステムを機能ごとに検証。
結合テスト（CT／IT）：システムにおける複数の機能を組み合わせて動作を検証。
総合テスト（ST）：システムにおける機能を全て結合して、本番と似た環境でシステムを検証。
エビデンス／証跡：（evidence：証拠）
データパッチ：（patch）ソフトに変更を加えるために用意された、後付けのプラグラムのこと。ソフトの修正、アップグレードをさせる。
Access：Microsoft社が開発し提供しているデータベース管理ソフト。
マクロ：複雑なコンピュータの操作を自動化する技術の総称であり、ほとんどのOffice製品に標準搭載されている。
VBA：マイクロソフト社が提供しているVisual Basic for Applicationsの略称であり、Office製品でマクロを開発するためのプログラミング言語のことを言いう。
GAS（Google Apps Script）：Googleが提供しているプログラミング環境。GAS（ガス）という略称でも呼ばれている。
API：（Application Programming Interface）ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、第三者が開発したソフトウェアと機能を共有できるようにしてくれるもの。
WEB API：API提供者とAPI利用者とのやりとりをHTTP／HTTPSベースで実現するAPI。
REST API：（REST：Representational State Transfer）・HTTPのメソッド（命令）でデータ操作種別（CRUD）を表す・ステートレスにする・URIで操作対象のリソースを判別可能にする・レスポンスとしてXMLもしくはJSONで操作結果を戻すのRESTの考え方に従って実装されたAPI。
SOAP：XMLを利用したWebサービス連携プロトコル。
Ajax：（Asynchronous JavaScript and XML）JavaScriptでサーバー側と非同期通信を行うための技術。
XML：文章の見た目や構造を記述するためのマークアップ言語の一種。
JSON：テキストベースのデータフォーマット。
ステータスコード：HTTPステータスコード（HTTP Status Code）とも呼ばれる、HTMLを表示する前にブラウザが受信する3桁の番号。
クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）：別オリジンのリソースへアクセス(＝ クロスサイトHTTPリクエスト)できるようにするためのルール、手法。
バリデーション：（validation）入力内容や記述内容が要件を満たしているか、妥当性を確認すること。
○データ連携
Daemon：UNIX系OSでメインメモリ上で常駐して特定の機能を提供するプログラム。
CRON：ジョブ（スクリプト）を自動実行するためのデーモンプロセス。
バッチ：（batch：一束）一定量のデータを集め、一括処理するための処理方法。
ログ：コンピュータの利用状況やデータ通信など履歴や情報の記録を取ること。
CSV：（Comma Separated Value）各項目間が「,(カンマ)」で区切られているテキストデータ
TSV：（Tab Separated Values）各項目間が「タブ」で区切られているテキストデータ
プルリクエスト（マージリクエスト）：コードの変更をレビュワーに通知し、マージを依頼する機能。

■ チケット管理ツール
asana：計画を整理して、順調に進めて、期限を守ることに特化したプロジェクト・タスク管理ツール。
Backlog：一つのプラットフォームでチームメンバーの作業状況をこまめに共有することで、プロジェクトを迅速に進めることができる。
Jooto：どんなチームでも使えるタスク・プロジェクト管理ツール。
Readmine：プロジェクト管理ができるオープンソースソフトウェア。
Trello：カードを動かしながらタスクを視覚的に管理できるカンバン方式のツール。

■ バージョン管理
集中型：ひとつのリポジトリに接続してみんなで使う方法。
分散型：各自、個人のパソコン上にリポジトリを持ち、好きなタイミングで好きなリポジトリに同期する方法。
Github：GitHubとは、ソフトウェア開発プロジェクトのためのソースコード管理サービス。
SourceTree：Gitの操作ができる無料のデスクトップアプリケーション。
Tortoise SVN：Subversion (SVN)のクライアントで、Windowsのシェルエクステンションとして機能する。
Git Flow：チームで Git を使う際に役立つ、運用ルールをまとめたツール。
master：プロダクトとしてリリースするためのブランチ。
release：プロダクトリリースの準備。機能の追加やマイナーなバグフィックスとは独立させることで、リリース時に含めるコードを綺麗な状態に保つことができる。
develop：開発ブランチ。コードが安定し、リリース準備ができたらmasterへマージする。
feature：機能の追加。developから分岐し、developにマージする。

■ FW／ライブラリ
FW
Spring Framework
Struts
JSF（Java Server Faces）
ライブラリ
Bootstrap
Flyway
Jackson
jQuery
Junit
Log4j
Lombok
ORM

■ 連絡ツール
ChatWork
Slack
IP Messenger

■ Java
Javadoc
アノテーション
メモリ管理
ヒープ
GC
GoF
デザインパターン

■ その他
オブジェクト指向
バッチ処理
コンパイル
カバレッジ
プラットホーム